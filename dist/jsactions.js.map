{"version":3,"file":"jsactions.js","sources":["../src/createjs/Event.js","../src/createjs/EventDispatcher.js","../src/jsactions/core/EventRouter.js","../src/jsactions/core/Router.js","../src/jsactions/utils/EventUtils.js","../src/jsactions/events/EventChannel.js","../src/jsactions/events/EventBroadcaster.js","../src/jsactions/events/NavigationEvent.js","../src/jsactions/utils/InstanceId.js","../src/jsactions/utils/ElementUtils.js","../src/jsactions/core/View.js","../src/jsactions/utils/ElementState.js","../src/jsactions/core/Component.js","../src/jsactions/core/Container.js","../src/jsactions/core/ViewStack.js","../src/jsactions/core/ViewNavigator.js","../src/jsactions/core/ViewManager.js","../src/jsactions/events/GenericEvent.js","../src/jsactions/utils/BindingUtils.js"],"sourcesContent":["/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n\n    constructor(type, bubbles = false, cancelable = false) {\n        /**\n         * The type of event.\n         * @type string\n         */\n        this.type = type;\n\n        /**\n         * The object that generated an event.\n         *\n         * @type Object\n         * @default null\n         * @readonly\n         */\n        this.target = null;\n\n        /**\n         * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n         * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n         * is generated from childObj, then a listener on parentObj would receive the event with\n         * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n         *\n         * @type Object\n         * @default null\n         * @readonly\n         */\n        this.currentTarget = null;\n\n        /**\n         * For bubbling events, this indicates the current event phase:\n         * <OL>\n         * \t<LI> capture phase: starting from the top parent to the target</LI>\n         * \t<LI> at target phase: currently being dispatched from the target</LI>\n         * \t<LI> bubbling phase: from the target to the top parent</LI>\n         * </OL>\n         *\n         * @type number\n         * @default 0\n         * @readonly\n         */\n        this.eventPhase = 0;\n\n        /**\n         * Indicates whether the event will bubble through the display list.\n         *\n         * @type boolean\n         * @readonly\n         */\n        this.bubbles = bubbles;\n\n        /**\n         * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n         *\n         * @type boolean\n         * @readonly\n         */\n        this.cancelable = cancelable;\n\n        /**\n         * The epoch time at which this event was created.\n         *\n         * @type number\n         * @readonly\n         */\n        this.timeStamp = new Date().getTime();\n\n        /**\n         * Indicates if {@link core.Event#preventDefault} has been called on this event.\n         *\n         * @type boolean\n         * @default false\n         * @readonly\n         */\n        this.defaultPrevented = false;\n\n        /**\n         * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n         *\n         * @type boolean\n         * @default false\n         * @readonly\n         */\n        this.propagationStopped = false;\n\n        /**\n         * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n         *\n         * @type boolean\n         * @default false\n         * @readonly\n         */\n        this.immediatePropagationStopped = false;\n\n        /**\n         * Indicates if {@link core.Event#remove} has been called on this event.\n         *\n         * @type boolean\n         * @default false\n         * @readonly\n         */\n        this.removed = false;\n    }\n\n    /**\n     * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n     * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n     * cancel the default behaviour associated with the event.\n     * @return {core.Event} this, chainable\n     */\n    preventDefault() {\n        this.defaultPrevented = this.cancelable;\n        return this;\n    }\n\n    /**\n     * Sets {@link core.Event#propagationStopped} to true.\n     * Mirrors the DOM event standard.\n     * @return {core.Event} this, chainable\n     */\n    stopPropagation() {\n        this.propagationStopped = true;\n        return this;\n    }\n\n    /**\n     * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n     * Mirrors the DOM event standard.\n     * @return {core.Event} this, chainable\n     */\n    stopImmediatePropagation() {\n        this.immediatePropagationStopped = this.propagationStopped = true;\n        return this;\n    }\n\n    /**\n     * Causes the active listener to be removed via removeEventListener();\n     *\n     * @example\n     * myBtn.addEventListener(\"click\", event => {\n     *   event.remove(); // removes this listener.\n     * });\n     *\n     * @return {core.Event} this, chainable\n     */\n    remove() {\n        this.removed = true;\n        return this;\n    }\n\n    /**\n     * Returns a clone of the Event instance.\n     *\n     * @return {core.Event} a clone of the Event instance.\n     */\n    clone() {\n        const event = new Event(this.type, this.bubbles, this.cancelable);\n        for (let n in this) {\n            if (this.hasOwnProperty(n)) {\n                event[n] = this[n];\n            }\n        }\n        return event;\n    }\n\n    /**\n     * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n     *\n     * @param {Object} props A generic object containing properties to copy to the instance.\n     * @return {core.Event} this, chainable\n     */\n    set(props) {\n        for (let n in props) { this[n] = props[n]; }\n        return this;\n    }\n\n    /**\n     * Returns a string representation of this object.\n     *\n     * @return {string} A string representation of the instance.\n     */\n    toString() {\n        return `[${this.constructor.name} (type=${this.type})]`;\n    }\n\n}\n\nexport default Event;","/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Event from \"./Event\";\n\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\nclass EventDispatcher {\n\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t *\n\t * @static\n\t * @example\n\t * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t *\n\t * @param {Object} target The target object to inject EventDispatcher methods into.\n\t */\n\tstatic initialize (target) {\n\t\tconst p = EventDispatcher.prototype;\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t}\n\n\tconstructor () {\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._listeners = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._captureListeners = null;\n\t}\n\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * @example\n\t * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function|Object} Returns the listener for chaining or assignment.\n\t */\n\taddEventListener (type, listener, useCapture = false) {\n\t\tlet listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners || {};\n\t\t}\n\t\tlet arr = listeners[type];\n\t\tif (arr) {\n\t\t\tthis.removeEventListener(type, listener, useCapture);\n\t\t\tarr = listeners[type]; // remove may have deleted the array\n\t\t}\n\t\tif (arr) { arr.push(listener);  }\n\t\telse { listeners[type] = [listener]; }\n\t\treturn listener;\n\t}\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t *\n\t * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t *\n\t * @example\n\t * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t * function handleClick (evt, data) {\n\t *   data.count -= 1;\n\t *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t *   if (data.count == 0) {\n\t *     alert(\"clicked 3 times!\");\n\t *     myBtn.off(\"click\", listener);\n\t *     // alternately: evt.remove();\n\t *   }\n\t * }\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t */\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope || listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope || this;\n\t\treturn this.addEventListener(type, evt => {\n\t\t\tlistener.call(scope, evt, data);\n\t\t\tonce && evt.remove();\n\t\t}, useCapture);\n\t}\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * You must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * @example\n\t * displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\tremoveEventListener (type, listener, useCapture = false) {\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tconst arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tconst l = arr.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (arr[i] === listener) {\n\t\t\t\tif (l === 1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i, 1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * `on` method.\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t * {@link core.EventDispatcher#on} for an example.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\toff (type, listener, useCapture = false) {\n\t\tthis.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * @example\n\t * // remove all listeners\n\t * displayObject.removeAllEventListeners();\n\t *\n\t * // remove all click listeners\n\t * displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t */\n\tremoveAllEventListeners (type = null) {\n\t\tif (type) {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t} else {\n\t\t\tthis._listeners = this._captureListeners = null;\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * @example\n\t * // use a string event\n\t * this.dispatchEvent(\"complete\")\n\t *\n\t * // use an Event instance\n\t * const event = new createjs.Event(\"progress\");\n\t * this.dispatchEvent(event);\n\t *\n\t * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t */\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\n\t\tif (typeof eventObj === \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tconst listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tlet top = this;\n\t\t\tconst list = [top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tconst l = list.length;\n\t\t\tlet i;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t */\n\thasEventListener (type) {\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t *\n\t * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t */\n\twillTrigger (type) {\n\t\tlet o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object|Event|string} eventObj\n\t * @param {Object} eventPhase\n\t */\n\t_dispatchEvent (eventObj, eventPhase) {\n\t\tconst listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners) {\n\t\t\tlet arr = listeners[eventObj.type];\n\t\t\tlet l;\n\t\t\tif (!arr || (l = arr.length) === 0) { return; }\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\n\t\t\teventObj.removed = false;\n\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tlet o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default EventDispatcher;\n","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n * EventRouter holds and manages array of event routes.\r\n * Event Routes are used by ViewNavigator to find associated View and Viewstack\r\n * \r\n * Viewnavigator find View and ViewStack based on Routes info set in EventRouter Object see Example\r\n * \r\n */\r\n\r\n class EventRouter {\r\n\r\n\r\n    /**\r\n     * @example Sample Event Router Object is in \"SimpleNavigator\" class (subclass of ViewNavigator) \r\n     \r\n        initEventRoutes() {\r\n            let evtRoutes = [\r\n\r\n               { navEvent: \" Login_NavEvent \", viewstackId: “LoginStack\", viewId: “loginView\", path: \"/login\" },\r\n               { navEvent: \" Register_NavEvent \", viewstackId: “LoginStack\", viewId: “registerView\", path: \"/login\" },\r\n               { navEvent: \" ForgotPwd_NavEvent\", viewstackId: “LoginStack\", viewId: “forgotpwdView\", path: \"/login\" }\r\n\r\n            ]\r\n            this.eventRouter = new EventRouter(evtRoutes);\r\n        }\r\n\r\n        Here \"navEvent\" is Event Name, \"viewstackId\" is ViewStack Id, \"viewId\" is ViewId and \"path\" is routeID by which ViewNavigator associated.\r\n\r\n     * \r\n     * @param {array} [_routes=[]] - Events routes array\r\n     * @memberof EventRouter\r\n     */\r\n    constructor(_routes = []) {\r\n        this.routes = _routes;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Adds new Event Route\r\n     * @param {string} _navEvent - Navigation Event Name\r\n     * @param {string} _viewstackId - ViewStack ID\r\n     * @param {string} _viewId -  View ID\r\n     * @param {string} _path -  Navigator Route path associted \r\n     * @memberof EventRouter\r\n     */\r\n    addRoute(_navEvent, _viewstackId, _viewId, _path) {\r\n        let route = {};\r\n        route.navEvent = _navEvent;\r\n        route.viewstackId = _viewstackId;\r\n        route.viewId = _viewId;\r\n        route.path = _path;\r\n        this.routes.push(route);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description find Event Route using Naviagtion EventName\r\n     * @param {string} _navEvent\r\n     * @returns {Object} Event Route Object\r\n     * @memberof EventRouter\r\n     */\r\n    findRoute(_navEvent) {\r\n        let tmpRoute = [];\r\n        for (let x = 0; x < this.routes.length; x++) {\r\n            if (this.routes[x].navEvent == _navEvent)\r\n                tmpRoute[x] = this.routes[x];\r\n        }\r\n        return tmpRoute;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated view by Navigation EventName and Path\r\n     * @param {string} _navEvent\r\n     * @param {string} _path\r\n     * @returns {string} - ViewID \r\n     * @memberof EventRouter\r\n     */\r\n    findViewId(_navEvent, _path) {\r\n        let tmpViewId = [];\r\n        for (let i = 0; i < this.routes.length; i++) {\r\n            if ((this.routes[i].navEvent == _navEvent) && (this.routes[i].path == _path))\r\n                tmpViewId = this.routes[i].viewId;\r\n        }\r\n        return tmpViewId;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated viewstack by Navigation EventName and Path\r\n     * @param {string} _navEvent\r\n     * @param {string} _path\r\n     * @returns {string} - ViewStackID\r\n     * @memberof EventRouter\r\n     */\r\n    findViewStackId(_navEvent, _path) {\r\n        let tmpViewStackId = null;\r\n        for (let j = 0; j < this.routes.length; j++) {\r\n            if ((this.routes[j].navEvent == _navEvent) && (this.routes[j].path == _path))\r\n                tmpViewStackId = this.routes[j].viewstackId;\r\n        }\r\n        return tmpViewStackId;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Remove and Resets existing event routes\r\n     * @memberof EventRouter\r\n     */\r\n    reset() {\r\n        this.routes = [];\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description prints Event Routes\r\n     * @memberof EventRouter\r\n     */\r\n    printRoutes() {\r\n        if (this.routes.length > 0) {\r\n            for (let i = 0; i < this.routes.length; i++) {\r\n                console.log(\"navEvent:\" + this.routes[i].navEvent + \" viewstackId:\" + this.routes[i].viewstackId + \" viewId:\" + this.routes[i].viewId);\r\n            }\r\n        } else {\r\n            console.log(\"No Routes Found\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default EventRouter;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n/**\r\n *\r\n * Router holds and manages array of Path routes\r\n * Path Routes are used by ViewManager to find associated Navigator and Viewstack\r\n * Viewmanager find Viewnavigator based on Routes info set in Router Object\r\n * see Example\r\n */\r\nclass Router {\r\n\r\n    /**\r\n     *  @example Sample Router Object is to be implement in \"AppViewManager\" class (subclass of ViewManager) \r\n     \r\n        initRoutes() {\r\n            let tmpRoutes = [\r\n                { path: \"/login\", navigatorId: \" LoginNavigator\",parentId: \"root\" },\r\n                { path: \"/file\", navigatorId: \" FileNavigator\",parentId: \"root\" },\r\n                { path: \"/logout\", navigatorId: \"ExitNavigator\",parentId: \"root\" },\r\n            ]\r\n            this.routes = new Router(tmpRoutes);\r\n        }\r\n\r\n      Here \"path\" is routeID, \"navigatorId\" is viewNavigatorId, \"parentId\" is DOM Element Id or ViewId or ContainerId.\r\n      By Default Main DOM Element have id=\"root\"\r\n\r\n     * \r\n     * @param {array} [_routes=[]] - Path routes array\r\n     * @memberof Router\r\n     */\r\n    constructor(_routes = []) {\r\n        this.routes = _routes;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Adds new Path Route\r\n     * @param {string} _path - Path Name\r\n     * @param {string} _navigatorId -  Navigator ID\r\n     * @param {string} _parentId -  Parent Object / Element ID\r\n     * @memberof Router\r\n     */\r\n    addRoute(_path, _navigatorId, _parentId) {\r\n        let route = {};\r\n        route.path = _path;\r\n        route.navigatorId = _navigatorId;\r\n        route.parentId = _parentId;\r\n        this.routes.push(route);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated Navigator by Path route Name\r\n     * @param {string} _route\r\n     * @returns {Array} - NavigatorID Array\r\n     * @memberof Router\r\n     */\r\n    findNavigator(_route) {\r\n        let tmpNavigatorIds = [];\r\n        for (let i = 0; i < this.routes.length; i++) {\r\n            if (this.routes[i].path === _route)\r\n                tmpNavigatorIds.push(this.routes[i].navigatorId);\r\n        }\r\n        return tmpNavigatorIds;\r\n    }\r\n\r\n    findRouteNavigators(_route){\r\n        //let path = \"/rootpath/path9/path8\"\r\n        let tmpNewRouteArray = _route.split(\"/\");\r\n        let tmpNavigatorIds = [];\r\n        tmpNewRouteArray.shift();\r\n        let length =  tmpNewRouteArray.length;\r\n        let routesArray = [];\r\n        for (let x = 0; x < tmpNewRouteArray.length; x++) {\r\n            let tmppathStr = \"\";\r\n            for (let y = 0; y <= x; y++){\r\n                tmppathStr += \"/\" + tmpNewRouteArray[y];\r\n            }\r\n            routesArray.push(tmppathStr);\r\n            //[\"/rootpath\", \"/rootpath/path9\", \"/rootpath/path9/path8\"]\r\n        \r\n        }\r\n        for (let z = 0; z < routesArray.length; z++) {\r\n            let tmpRouteArr = this.findNavigator(routesArray[z]);\r\n            tmpNavigatorIds[z] = tmpRouteArr[0];\r\n        }\r\n        return tmpNavigatorIds;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated Navigator Parent by navigator ID\r\n     * @param {string} _navigatorId\r\n     * @returns {string} - Parent ID\r\n     * @memberof Router\r\n     */\r\n    findNavigatorParent(_navigatorId) {\r\n        let tmpParentId = \"root\";\r\n        for (let i = 0; i < this.routes.length; i++) {\r\n            if (this.routes[i].navigatorId === _navigatorId)\r\n                tmpParentId = this.routes[i].parentId;\r\n        }\r\n        return tmpParentId;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description finds associated ViewStack  by Path route Name\r\n     * @param {string} _route\r\n     * @returns {string} - ViewStack ID\r\n     * @memberof Router\r\n     */\r\n    findViewStack(_route) {\r\n        let tmpViewStackId = null;\r\n        for (let j = 0; j < this.routes.length; j++) {\r\n            if (this.routes[j].path == _route)\r\n                tmpViewStackId = this.routes[j].viewstackId;\r\n        }\r\n        return tmpViewStackId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Remove and Resets existing path routes\r\n     * @memberof Router\r\n     */\r\n    reset() {\r\n        this.routes = [];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description prints path Routes\r\n     * @memberof Router\r\n     */\r\n    printRoutes() {\r\n        if (this.routes.length > 0) {\r\n            for (let i = 0; i < this.routes.length; i++) {\r\n                console.log(\"path:\" + this.routes[i].path + \" navigatorId:\" + this.routes[i].navigatorId);\r\n            }\r\n        } else {\r\n            console.log(\"No Routes Found\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Router;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n *\r\n *\r\n * EventUtils is static class and provides common Event Constants.\r\n */\r\nclass EventUtils {\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get FORGOTPWD_NAV_EVENT() {\r\n        return \"Forgotpwd_Nav_Event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get REGISTER_NAV_EVENT() {\r\n        return \"Register_Nav_Event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get BACK_NAV_EVENT() {\r\n        return \"Back_Nav_Event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get NAV_CHANGE_EVENT() {\r\n        return \"navigation_change_event\";\r\n    }\r\n\r\n    //View,Navigator Specific Events\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get INITIALIZE_EVENT() {\r\n        return \"initialize_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get ATTACHED_EVENT() {\r\n        return \"attached_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get DETACHED_EVENT() {\r\n        return \"detached_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get ACTIVATE_EVENT() {\r\n        return \"activate_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get DEACTIVATE_EVENT() {\r\n        return \"deactivate_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get CHANGE() {\r\n        return \"change\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get CLICK() {\r\n        return \"click\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get VIEW_EVENT(){\r\n        return \"view_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get MODEL_EVENT(){\r\n        return \"model_event\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof EventUtils\r\n     */\r\n    static get COMPONENT_EVENT(){\r\n        return \"component_event\";\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default EventUtils;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\n\r\n/**\r\n * Eventchannel use to Publish event to Channel subscribers. \r\n * \r\n * Event dispatch using event channel with help of Event Broadcaster\r\n * \r\n * It also known as PubSub\r\n */\r\nclass EventChannel extends EventDispatcher {\r\n\r\n    /**\r\n     *\r\n     * @example \r\n       //create Navigation Event\r\n       let helloNavEvent = new NavigationEvent(EventUtils.NAV_CHANGE_EVENT, \"Hello_NavEvent\", \"Message :: Hello World !!!\", \"/hello\");\r\n\r\n       // Dispatch Navigation Event on Navigation Event Channel\r\n       EventBroadCaster.navEventChannel.dispatchEvent(navEvent);\r\n\r\n     * @param {String} _id - EventChannel ID\r\n     * @memberof EventChannel\r\n     */\r\n    constructor(_id) {\r\n        super();\r\n        this.id = _id;\r\n    }\r\n}\r\n\r\nexport default EventChannel;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport EventChannel from './EventChannel';\r\n\r\n/**\r\n * \r\n * EventBroadCaster is Centralize Singleton Static Class use to Broadcast Events in Application on Application Channel or Navigation Channel from Publisher to Subscribers Objects such View, ViewNavigator, ViewManager, Component etc.  \r\n * \r\n * Supports Event Communication with One to One , One to Many pattern\r\n */\r\nclass EventBroadCasters {\r\n\r\n\r\n    /**\r\n     * @example Publish using Navigation Channel\r\n       //create Navigation Event\r\n       let helloNavEvent = new NavigationEvent(EventUtils.NAV_CHANGE_EVENT, \"Hello_NavEvent\", \"Message :: Hello World !!!\", \"/hello\");\r\n\r\n       // Dispatch Navigation Event on Navigation Event Channel\r\n       EventBroadCaster.navEventChannel.dispatchEvent(navEvent);\r\n\r\n       @example Subscribe using Navigation Channel to Receive Navigation Event\r\n       \r\n       EventBroadCaster.navEventChannel.addEventListener(EventUtils.NAV_CHANGE_EVENT, event => { this.handleNavChangeEvent(event); });\r\n\r\n\r\n     * @memberof EventBroadCaster\r\n     */\r\n    constructor() {\r\n        if (!EventBroadCasters.instance) {\r\n            EventBroadCasters.instance = this;\r\n            this.appEvtChannel = new EventChannel(\"APPLICATIONEVENT\");\r\n            this.navEvtChannel = new EventChannel(\"NAVIGATIONEVENT\");\r\n        }\r\n        return EventBroadCasters.instance;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Returns Application Event Channel Instance\r\n     * @returns {Object}\r\n     * @readonly\r\n     * @memberof EventBroadCaster\r\n     */\r\n    get appEventChannel() {\r\n        return this.appEvtChannel;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Returns Navigation Event Channel Instance\r\n     * @returns {Object} \r\n     * @readonly\r\n     * @memberof EventBroadCaster\r\n     */\r\n    get navEventChannel() {\r\n        return this.navEvtChannel;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nconst EventBroadCaster = new EventBroadCasters();\r\n// prevents new properties from being added to the object\r\nObject.freeze(EventBroadCaster);\r\n\r\nexport default EventBroadCaster;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport Event from \"../../createjs/Event\";\r\n\r\n\r\n/**\r\n *\r\n * Navigation Generates Event with Navigation Type . Useful to dispatched Event with EventName, Params, Event Type, Route\r\n * \r\n * It support loosely connected View and ViewNavigator.\r\n */\r\nclass NavigationEvent extends Event {\r\n\r\n    /**\r\n      *  @example \r\n       //create Navigation Event\r\n       let helloNavEvent = new NavigationEvent(EventUtils.NAV_CHANGE_EVENT, \"Hello_NavEvent\", \"Message :: Hello World !!!\", \"/hello\");\r\n\r\n       // Dispatch Navigation Event on Navigation Event Channel\r\n       EventBroadCaster.navEventChannel.dispatchEvent(navEvent);\r\n       \r\n     * @param {string} _type\r\n     * @param {string} _eventName\r\n     * @param {Object} _params\r\n     * @param {string} _route\r\n     * @param {*} _bubbles\r\n     * @param {Boolean} _cancelable\r\n     * @memberof NavigationEvent\r\n     */\r\n    constructor(_type, _eventName, _params, _route, _bubbles, _cancelable, ) {\r\n        super(_type, _bubbles, _cancelable);\r\n        this.type = _type;\r\n        this.eventName = _eventName;\r\n        this.params = _params;\r\n        this.route = _route;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @returns {Object} - creates and return NavigationEvent Instance\r\n     * @memberof NavigationEvent\r\n     */\r\n    clone() {\r\n        return new NavigationEvent(this.type, this.eventName, this.params, this.route, this.bubbles, this.cancelable);\r\n    }\r\n}\r\n\r\nexport default NavigationEvent;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n *\r\n * Generates Unique Instance ID\r\n * @class InstanceId\r\n */\r\nclass InstanceIds {\r\n\r\n    constructor() {\r\n        if (!InstanceIds.instance) {\r\n            InstanceIds.instance = this;\r\n            this.counter = 1;\r\n        }\r\n        return InstanceIds.instance;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Returns Unique Instance ID\r\n     * @readonly\r\n     * @memberof InstanceId\r\n     */\r\n    get generate() {\r\n        return this.counter++;\r\n    }\r\n\r\n}\r\n\r\nconst InstanceId = new InstanceIds();\r\nexport default InstanceId;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport InstanceId from './InstanceId';\r\n\r\n\r\n/**\r\n *\r\n * ElementUtils creates DOM wrapper for JSactions core Objects such as View, ViewNavigator, ViewStack, Component, Container\r\n * \r\n * JSactions core object ->  HTML DOM wrapper\r\n * \r\n   ViewNavigator HTML DOM wrapper:\r\n       &lt; div class=\"jsact-viewnavigator ${navigatorId}\" &gt;\r\n\r\n   ViewStack HTML DOM wrapper:\r\n        &lt; div class=\"jsact-viewstack ${viewstackId}\" &gt;\r\n\r\n   View HTML DOM wrapper:\r\n         &lt; div class=\"jsact-view ${viewId}\" &gt;\r\n\r\n   Container HTML DOM wrapper:\r\n         &lt; div class=\"jsact-container ${containerId}\" &gt;\r\n\r\n   Component HTML DOM wrapper:\r\n        &lt; div class=\"jsact-component ${componentId}\" &gt;\r\n * \r\n * \r\n\r\n */\r\nclass ElementUtils {\r\n    \r\n    /**\r\n     *\r\n     * Find  Component DOM Element by ComponentID\r\n     * @example\r\n        let tmpViewId = this.id; \r\n        let buttonEl = ElementUtils.component(\"buttonComp\",tmpViewId);\r\n\r\n     * @static\r\n     * @param {string} _componentId\r\n     * @param {string} _viewId\r\n     * @returns {string} Component DOM Element with \".jsact-component\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static component(_componentId,_viewId) {\r\n        let viewEl = ElementUtils.view(_viewId);\r\n        return viewEl.querySelector(\".jsact-component.\" + _componentId);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Find  Container DOM Element by ContainerID\r\n     * @example \r\n        let tmpViewId = this.id; \r\n        let buttonContEl = ElementUtils.container(\"helloContainer\",tmpViewId);\r\n     *\r\n     * @static\r\n     * @param {string} _containerId\r\n     * @param {string} _viewId\r\n     * @returns {string} Container DOM Element with \".jsact-container\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static container(_containerId,_viewId) {\r\n        let viewEl = ElementUtils.view(_viewId);\r\n        return viewEl.querySelector(\".jsact-container.\" + _containerId);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Find  View DOM Element by ViewID\r\n     * @example \r\n        let tmpViewId = this.id; \r\n        let viewEl = ElementUtils.view(tmpViewId);\r\n\r\n     * @static\r\n     * @param {string} _viewId\r\n     * @returns {string} View DOM Element with \".jsact-view\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static view(_viewId) {\r\n        return document.querySelector(\".jsact-view.\" + _viewId);;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Find  ViewStack DOM Element by ViewStackID\r\n     * @example \r\n        let tmpViewstackId = this.id; \r\n        let viewEl = ElementUtils.viewStack(tmpViewstackId);\r\n     * @static\r\n     * @param {string} _viewStackId\r\n     * @returns {string} ViewStack DOM Element with \".jsact-viewstack\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static viewStack(_viewStackId) {\r\n        return document.querySelector(\".jsact-viewstack.\" + _viewStackId);;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Find  ViewNavigator DOM Element by ViewNavigatorID\r\n     * @example \r\n        let tmpNavigatorId = this.id; \r\n        let viewEl = ElementUtils.viewNavigator(tmpNavigatorId);\r\n     * @static\r\n     * @param {string} _viewNavId\r\n     * @returns {string} ViewNavigator DOM Element with \".jsact-viewnavigator\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static viewNavigator(_viewNavId) {\r\n        return document.querySelector(\".jsact-viewnavigator.\" + _viewNavId);;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Creates  Component Base DOM Element by ComponentID\r\n     * @static\r\n     * @param {string} _componentId\r\n     * @returns {string} Component DOM Element with \".jsact-component\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructComponentBaseElement(_componentId) {\r\n        return `<div class=\"jsact-component ${_componentId}\"></div>`;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Creates  Container Base DOM Element by ContainerID\r\n     * @static\r\n     * @param {string} _containerId\r\n     * @returns {string} Container DOM Element with \".jsact-container\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructContainerBaseElement(_containerId) {\r\n        return `<div class=\"jsact-container ${_containerId}\"></div>`;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Creates  View Base DOM Element by ViewID\r\n     * @static\r\n     * @param {string} _viewId\r\n     * @returns {string} View DOM Element with \".jsact-view\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructViewBaseElement(_viewId) {\r\n        return `<div class=\"jsact-view ${_viewId}\"></div>`;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Creates  ViewStack Base DOM Element by ViewStackID\r\n     * @static\r\n     * @param {string} _viewStackId\r\n     * @returns {string} ViewStack DOM Element with \".jsact-viewstack\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructViewStackBaseElement(_viewStackId) {\r\n        return `<div class=\"jsact-viewstack ${_viewStackId}\"></div>`;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Creates  ViewNavigator Base DOM Element by ViewNavigatorID\r\n     * @static\r\n     * @param {string} _navigatorId\r\n     * @returns {string} ViewNavigator DOM Element with \".jsact-viewnavigator\" css class\r\n     * @memberof ElementUtils\r\n     */\r\n    static constructNavigatorBaseElement(_navigatorId) {\r\n        return `<div class=\"jsact-viewnavigator ${_navigatorId}\"></div>`;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Hide DOM Element\r\n     * @static\r\n     * @param {string} _el - DOM Element\r\n     * @memberof ElementUtils\r\n     */\r\n    static hideElement(_el) {\r\n        _el.style.display = 'none';\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Show DOM Element\r\n     * @static\r\n     * @param {string} _el -  DOM Element\r\n     * @memberof ElementUtils\r\n     */\r\n    static showElement(_el) {\r\n        _el.style.display = 'block';\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Check if DOM Element is visible\r\n     * @static\r\n     * @param {string} _el - DOM Element\r\n     * @returns {Boolean} \r\n     * @memberof ElementUtils\r\n     */\r\n    static isVisible(_el){\r\n        return (_el.style.display == \"block\") ? true :false;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Generate Unique Component Instance ID\r\n     * @static\r\n     * @returns {string} \r\n     * @memberof ElementUtils\r\n     */\r\n    static generateComponentId(){\r\n        return \"component\"+InstanceId.generate;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * Generate Unique Container Instance ID\r\n     * @static\r\n     * @returns {string}\r\n     * @memberof ElementUtils\r\n     */\r\n    static generateContainerId(){\r\n        return \"container\"+InstanceId.generate;\r\n    }\r\n}\r\n\r\nexport default ElementUtils;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport Event from '../../createjs/Event';\r\nimport EventUtils from '../utils/EventUtils';\r\nimport EventBroadCaster from '../events/EventBroadcaster';\r\nimport NavigationEvent from '../events/NavigationEvent';\r\nimport ElementUtils from '../utils/ElementUtils';\r\n\r\n/**\r\n * View consider as single UI screen. \r\n * \r\n * View contains Contents consist of \"Containers\" and \"Components\" and Model.\r\n * \r\n * View can be use with Core HTML Components also.\r\n * \r\n * View manages View Template or DOM Content such behaviour, event listners etc.\r\n * \r\n * View created and manage by ViewNavigator.\r\n * \r\n * View HTML DOM wrapper:\r\n         &lt; div class=\"vjs-view ${viewId}\" &gt;\r\n *\r\n * View LifeCycle methods executes in given order :\r\n *\r\n *  1) Creation : constructor, attachView, activateView\r\n *\r\n *  2) Destruction : deActivateView, detachView, destroy\r\n *\r\n *  Following methods overrides and implement by View subclass executes in given order :\r\n * \r\n *  1) Creation : constructor, initView, createViewContent, addViewHandler, bindView\r\n * \r\n *  2) Destruction : unBindView, removeViewHandler, destroy\r\n * \r\n */\r\nclass View extends EventDispatcher {\r\n\r\n\r\n    /**\r\n     * @param {String} _id - View Id\r\n     * @param {String} _route - View Route\r\n     * @param {String} _navevent - View Navigation Event Name\r\n     * @param {String} _navparams - Parameters pass to View \r\n     * @param {String} _parentViewStackId - Parent Viewstack Id \r\n     * @memberof View\r\n     */\r\n    constructor(_id, _route,_navevent, _navparams, _parentViewStackId) {\r\n        super();\r\n        this.id = _id;\r\n        this.route = _route;\r\n        this.navEvent = _navevent;\r\n        this.navParams = _navparams;\r\n        this.parentViewStackId = _parentViewStackId;\r\n        this.navigatorContainerId = null; // Use when View is ParentNavigator\r\n        this.isAttached = false;\r\n        this.isActive = false;\r\n        this.initView();\r\n    }\r\n\r\n    /**\r\n     *\r\n     *\r\n      @param {Event} event - Back Navigation Event dispatch by view component or method\r\n     * @memberof View\r\n     */\r\n    dispatchNavBackEvent(event) {\r\n        event.preventDefault();\r\n        let navEvent = new NavigationEvent(EventUtils.NAV_CHANGE_EVENT, EventUtils.BACK_NAV_EVENT, null, this.route);\r\n        EventBroadCaster.navEventChannel.dispatchEvent(navEvent);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @override\r\n     * @description Call by View Constructor\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    initView() {}\r\n\r\n    /**\r\n     * @override\r\n     * @description Create View Contents and Internal Components\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    createViewContent() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @description Add Event Handlers for view Internal Components\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    addViewHandler() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @description Remove Event Handlers for view Internal Components\r\n     * @memberof View\r\n     */\r\n    removeViewHandler() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @description Bind View Component Properties with Model or other view Components\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    bindView() {}\r\n\r\n    /**\r\n     * @override\r\n     * @description Remove Bind View Component Properties with Model or other view Components\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    unBindView() {}\r\n\r\n    /**\r\n     * @override\r\n     * @description Destroy Method used to cleanup view resources\r\n     * Call by ViewNavigator to destroy view\r\n     * Remove Event Handlers, Make Properties null, \r\n     * Remove View Components and its reference.\r\n     * @public\r\n     * @memberof View\r\n     **/\r\n    destroy() {\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * View Lifecycle Method,\r\n     * Call by ViewNavigator,\r\n     * \r\n     * attachView Responsible to render view content, listners etc,\r\n     * \r\n     * Dispatch \"ATTACHED_EVENT\" when view got attached / rendered,\r\n     * \r\n     * Following methods call by attachView :\r\n     * createViewContent\r\n     * addViewHandler\r\n     * bindView\r\n     * @param {String} _parentEl \r\n     */\r\n    attachView(_parentEl = null) {\r\n        if (!this.isAttached) {\r\n            let parentEl = _parentEl;\r\n            if (parentEl == null)\r\n                parentEl = ElementUtils.viewStack(this.parentViewStackId);\r\n            parentEl.insertAdjacentHTML('beforeend', ElementUtils.constructViewBaseElement(this.id));\r\n            this.isAttached = true;\r\n            let tmpEle = this.getViewElement();\r\n            ElementUtils.hideElement(tmpEle);\r\n            //Create View Contents and Internal Components\r\n            this.createViewContent();\r\n            //Add Event Handlers for view Internal Components\r\n            this.addViewHandler();\r\n            //Bind View Component Properties with Model or other view Components\r\n            this.bindView();\r\n            this.dispatchEvent(EventUtils.ATTACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * View Lifecycle Method\r\n     * \r\n     * Call by ViewNavigator\r\n     * \r\n     * attached View visible\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    activateView() {\r\n        if (!this.isActive) {\r\n            let tmpViewEl = this.getViewElement();\r\n            ElementUtils.showElement(tmpViewEl);\r\n            this.isActive = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * View Lifecycle Method\r\n     * \r\n     * Call by ViewNavigator\r\n     * \r\n     * attached View if visible (active) then will become nonvisible\r\n     * @public\r\n     * @memberof View\r\n     */\r\n    deActivateView() {\r\n        if (this.isActive) {\r\n            let tmpViewEl = this.getViewElement();\r\n            ElementUtils.hideElement(tmpViewEl);\r\n            this.isActive = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * View Lifecycle Method\r\n     * \r\n     * Call by ViewNavigator\r\n     * \r\n     * View will be remove if View is attached \r\n     * @public\r\n     * @memberof View  \r\n    */\r\n    detachView() {\r\n        if (this.isAttached) {\r\n            this.unBindView();\r\n            this.removeViewHandler();\r\n            let tmpViewEle = this.getViewElement();\r\n            tmpViewEle.parentNode.removeChild(tmpViewEle);\r\n            this.isAttached = false;\r\n            this.dispatchEvent(EventUtils.DETACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description RefreshView method reset View properties or data\r\n     * @override\r\n     * @memberof View\r\n    */\r\n    refreshView() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Returns View DOM Element\r\n     * @returns {string} \r\n     * @memberof View\r\n     */\r\n    getViewElement() {\r\n        let tmpViewEl = null;\r\n        if (this.isAttached) {\r\n            tmpViewEl = ElementUtils.view(this.id);\r\n        }\r\n\r\n        return tmpViewEl;\r\n    }\r\n\r\n    getNavContainerId(_navId=null){\r\n        return this.navigatorContainerId;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Add Content DOM ELement to View DOM Element\r\n     * @param {string} _tmpViewContentEl - Content DOM Element\r\n     * @memberof View\r\n     */\r\n    addToViewElement(_tmpViewContentEl){\r\n        let tmpViewElement = this.getViewElement();\r\n        tmpViewElement.insertAdjacentHTML('beforeend', _tmpViewContentEl);\r\n    }\r\n\r\n}\r\n\r\nexport default View;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n *\r\n *\r\n * ElementState is static class and provies common states of Element as Constants.\r\n */\r\nclass ElementState {\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get LOADING() {\r\n        return \"loading\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get LOADED() {\r\n        return \"loaded\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get SUCCESS() {\r\n        return \"success\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get ERROR() {\r\n        return \"error\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get WARNING() {\r\n        return \"warning\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get READONLY() {\r\n        return \"readonly\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get ENABLED() {\r\n        return \"enabled\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get DISABLED() {\r\n        return \"disabled\";\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @readonly\r\n     * @static\r\n     * @memberof ElementState\r\n     */\r\n    static get DEFAULT() {\r\n        return \"default\";\r\n    }\r\n\r\n}\r\n\r\nexport default ElementState;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport EventUtils from '../utils/EventUtils';\r\nimport ElementUtils from '../utils/ElementUtils';\r\nimport ElementState from '../utils/ElementState';\r\n\r\n\r\n/**\r\n *\r\n * The Component class is the base class for all visual components. \r\n * \r\n * When setting \"_createDOMElement=false\" while creating instance of Component, Component class skip render DOM element part, assuming Component DOM Element already available and it take DOM element reference by componentId during Component creation.  \r\n *\r\n *\r\n * Component HTML DOM wrapper:\r\n        &lt; div class=\"vjs-component ${componentId}\" &gt;\r\n *\r\n * Component Class provides lifecycle methods as follows to manage DOM Elements and Standard Form Controls.\r\n *\r\n * 1) Creation & Initialization : constructor, init, attach\r\n *\r\n * 2) Update : refresh\r\n *\r\n * 3) Destruction : detach, destroy\r\n *\r\n\r\n * Create custom component by extending base Component Class and overrides and implement following methods which will executes in below given order\r\n *\r\n\r\n * 1) Creation & Initialization : constructor, init, initComponent, createDOMContent, addEventHandler,  bind\r\n\r\n *\r\n * 2) Update : changeComponentState, refresh, setComponentRequired, setComponentReadOnly, setComponentEnabled\r\n *\r\n * 3) Destruction : removeEventHandler, unBind, destroy\r\n *\r\n */\r\nclass Component extends EventDispatcher {\r\n    \r\n    /**\r\n     * Creates an instance of Component.\r\n     * @example Create an instance of Component in View Class in \"createViewContent\" method\r\n    \r\n        createViewContent() {\r\n        let tmpViewContentEl = this.createViewHTML();\r\n        this.addToViewElement(tmpViewContentEl);\r\n\r\n        this.cmpButton1 = new MyButton(\"cmpBtn\",this.id,\"helloContainer\",true);\r\n        this.cmpButton1.init(\"My Component\");\r\n        this.cmpButton1.attach();\r\n        this.cmpButton1.enabled = true;\r\n        }\r\n\r\n     *\r\n     * @param {string} [_id=null] - ComponentID\r\n     * @param {string} [_parentViewId=null] - Component Parent View ID\r\n     * @param {string} [_parentContainerId=null] - Component Parent Container ID\r\n     * @param {boolean} [_createDOMElement=true] - True if Component DOM element create from Template , False if taken from DOM.\r\n     * @memberof Component\r\n     */\r\n    constructor(_id = null, _parentViewId = null,_parentContainerId=null, _createDOMElement = true) {\r\n        super();\r\n        this.isEnabled= true;\r\n        this.isAttached = false;\r\n        this.elState = ElementState.DEFAULT;\r\n        this.isRequired = false;\r\n        this.isReadOnly = false;\r\n        this.createDOMElement = _createDOMElement;\r\n        this.id = _id;\r\n        this.formId = \"defaultform\";\r\n        if((_id == null)|| (_id == \"\"))\r\n            this.id = ElementUtils.generateComponentId();\r\n        this.parentViewId = _parentViewId;\r\n        this.parentContainerId = _parentContainerId;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Initialise Component properties and model\r\n     * Call by View or Parent\r\n     * @memberof Component\r\n     */\r\n    init() {\r\n\t\tthis.initComponent();\r\n\t}\r\n    \r\n    /**\r\n     * @override\r\n     * @description call by init method\r\n     * @memberof Component\r\n     */\r\n    initComponent(){}\r\n \r\n    /**\r\n     * creates DOM Contents of Component\r\n     * Overrides by SubClass\r\n     * Call by attach Method\r\n     */\r\n    createDOMContent() {}\r\n\r\n    /**\r\n     *\r\n     * Add Component Content DOM Element to Component\r\n     * @param {string} _tmpCompContentEl - DOMElement \r\n     * @memberof Component\r\n     */\r\n    addToComponentElement(_tmpCompContentEl){\r\n        let tmpCompElement = this.componentElement;\r\n        tmpCompElement.insertAdjacentHTML('beforeend', _tmpCompContentEl);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * \r\n     * @description Add Event Handlers for Component DOM Elements and Model\r\n     * Call by attach & set domElement Method\r\n     * @override\r\n     * @memberof Component\r\n     */\r\n    addEventHandler() {}\r\n\r\n    /**\r\n     * @override\r\n     * @description Remove Event Handlers for Component DOM Elements and Model\r\n     * call by destroy method\r\n     * @memberof Component\r\n     */\r\n    removeEventHandler() {}\r\n\r\n    /**\r\n     * Overrides by SubClass\r\n     * Bind Component Properties with Model or other Components\r\n     * call by attach & view\r\n     */ \r\n    bind() {}\r\n\r\n    /**\r\n     * Overrides by SubClass\r\n     * Remove Bind on Component Properties with Model or other Components\r\n     */\r\n    unBind() {}\r\n\r\n    /**\r\n     * returns Component DOM Element\r\n     */\r\n    get componentElement() {\r\n        let tmpComponentEl = null;\r\n        if (this.isAttached) {\r\n            tmpComponentEl = ElementUtils.component(this.id,this.parentViewId);\r\n        }\r\n        return tmpComponentEl;\r\n    }\r\n    \r\n    /**\r\n     * returns ParentViewID\r\n     */\r\n    get parentView(){\r\n        return this.parentViewId;\r\n    }\r\n\r\n    /**\r\n     * returns Parent Container ID\r\n     */\r\n    get parentContainer(){\r\n        return this.parentContainerId;\r\n    }\r\n\r\n    /**\r\n     * returns Component current state\r\n     */\r\n    get currentState() {\r\n        return this.elState;\r\n    }\r\n\r\n    /**\r\n     * change Component State\r\n     */\r\n    changeState(_state = \"default\"){\r\n        this.elState = _state;\r\n        this.changeComponentState();\r\n    }\r\n\r\n    /**\r\n     * change Component State\r\n     * Overrides by Subclass\r\n     */\r\n    changeComponentState(){}\r\n\r\n    /**\r\n     * returns True if Component is Required\r\n     */\r\n    get required(){\r\n        return this.isRequired;\r\n    }\r\n\r\n    set required(_isRequired = false){\r\n        this.isRequired = _isRequired;\r\n        this.setComponentRequired();\r\n    }\r\n\r\n    /**\r\n     * Overrides by Subclass\r\n     */\r\n    setComponentRequired(){}\r\n\r\n    /**\r\n     * returns True if Component is ResdyOnly\r\n     */\r\n    get readOnly(){\r\n        return this.isReadOnly;\r\n    }\r\n\r\n    set readOnly(_isReadOnly = false){\r\n        this.isReadOnly = _isReadOnly;\r\n        if(this.isReadOnly == true){\r\n            this.changeState(ElementState.READONLY);\r\n        }else{\r\n            this.changeState(ElementState.DEFAULT);\r\n        }\r\n        this.setComponentReadOnly();\r\n    }  \r\n    \r\n    /**\r\n     * Overrides by Subclass\r\n     */\r\n    setComponentReadOnly(){}\r\n\r\n\r\n    /**\r\n     * Boolean Property , returns True if Component is Enabled\r\n     */\r\n    get enabled() {\r\n        return this.isEnabled;\r\n    }\r\n\r\n    set enabled(_isenabled = false){\r\n        this.isEnabled = _isenabled;\r\n        this.setComponentEnabled();\r\n    }\r\n\r\n    /**\r\n     * Overrides by Subclass\r\n     */\r\n    setComponentEnabled(){}\r\n\r\n    /**\r\n     * Boolean Property , returns True if Component is Visible\r\n     */\r\n    get visible(){\r\n        let tmpComponentEl = this.componentElement;\r\n        return ElementUtils.isVisible(tmpComponentEl);\r\n    }\r\n\r\n    set visible(_visible){\r\n        let tmpComponentEl = this.componentElement;\r\n        if(_visible)\r\n            ElementUtils.showElement(tmpComponentEl);\r\n        else \r\n            ElementUtils.hideElement(tmpComponentEl);\r\n\r\n    }\r\n\r\n     /**\r\n     * Component Lifecycle Method\r\n     * Call by View or call manually \r\n     * attach Responsible to render component content, listners etc\r\n     * Dispatch \"ATTACHED_EVENT\" when view got attached / rendered \r\n     * Following methods call by attach method\r\n     * createDOMContent\r\n     * addViewHandler\r\n     * bind\r\n     *  \r\n     */\r\n     attach() {\r\n        if (!this.isAttached) {   \r\n            this.isAttached = true;\r\n            if(this.createDOMElement == true){\r\n                let parentEl = ElementUtils.container(this.parentContainerId,this.parentViewId);\r\n                parentEl.insertAdjacentHTML('beforeend', ElementUtils.constructComponentBaseElement(this.id));\r\n                let tmpEle = this.componentElement;\r\n                ElementUtils.hideElement(tmpEle);\r\n                //Create  Contents and Internal Components\r\n                this.createDOMContent();\r\n            }\r\n            \r\n            //Add Event Handlers for view Internal Components\r\n            this.addEventHandler();\r\n            //Bind  Component Properties with Model or other  Components\r\n            this.bind();\r\n            this.enabled = true;\r\n            this.visible = true;\r\n            this.dispatchEvent(EventUtils.ATTACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component Lifecycle Method\r\n     * Call by View or call manually \r\n     * Component will be remove if Component is attached\r\n    */\r\n    detach() {\r\n        if (this.isAttached) {\r\n            this.unBind();\r\n            this.removeEventHandler();\r\n            let tmpComponentEle = this.componentElement;\r\n            tmpComponentEle.parentNode.removeChild(tmpComponentEle);\r\n            this.isAttached = false;\r\n            this.dispatchEvent(EventUtils.DETACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh Component data and model and event listners\r\n     * Overrides by SubClass\r\n     */\r\n    refresh() {}\r\n\r\n    /**\r\n     * Overrides by SubClass\r\n     * Destroy Method used to cleanup component resources\r\n     * Call by View or call manually to destroy view\r\n     * Remove Event Handlers, Make Properties null, \r\n     * Remove DOM Element contents and its reference.\r\n     **/\r\n    destroy() {}\r\n\r\n}\r\n\r\nexport default Component;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport EventUtils from '../utils/EventUtils';\r\nimport ElementUtils from '../utils/ElementUtils';\r\n\r\n/**\r\n *\r\n * Container contains jsaction Components. Create custom container by extending base Container Class.\r\n * \r\n * Container HTML DOM wrapper:\r\n         &lt; div class=\"vjs-container ${containerId}\" &gt;\r\n * \r\n */\r\nclass Container extends EventDispatcher {\r\n\r\n    /**\r\n     * \r\n     * @param {string} [_id=null]\r\n     * @param {string} [_parentViewId=null]\r\n     * @param {boolean} [_createDOMElement=true]\r\n     * @memberof Container\r\n     */\r\n    constructor(_id = null, _parentViewId = null, _createDOMElement = true) {\r\n        super();\r\n        this.isEnabled= false;\r\n        this.createDOMElement = _createDOMElement;\r\n        this.isAttached = false;\r\n        this.id = _id;\r\n        if((_id == null)|| (_id == \"\"))\r\n            this.id = ElementUtils.generateContainerId();\r\n        this.parentViewId = _parentViewId;\r\n    }\r\n    \r\n    /**\r\n     *\r\n     * @override\r\n     * @memberof Container\r\n     */\r\n    initContainer(){\r\n        \r\n    }\r\n    \r\n    /**\r\n     *\r\n     * @description Call by View or Parent\r\n     * @public\r\n     * @memberof Container\r\n     */\r\n    init() {\r\n\t\tthis.initContainer();\r\n\t}\r\n\r\n    /**\r\n     * @description Call by attach Method\r\n     * @override\r\n     * @memberof Container\r\n     */\r\n    createDOMContent() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Get Container HTML Content\r\n     * @readonly\r\n     * @memberof Container\r\n     */\r\n    get containerElement() {\r\n        let tmpContainerEl = null;\r\n        console.log(\"containerElement: \"+this.isAttached)\r\n        if (this.isAttached) {\r\n            tmpContainerEl = ElementUtils.container(this.id,this.parentViewId);\r\n        }\r\n        return tmpContainerEl;\r\n    }\r\n   \r\n\r\n    /**\r\n     *\r\n     * @description Returns Parent ViewID\r\n     * @readonly\r\n     * @memberof Container\r\n     */\r\n    get parent(){\r\n        return this.parentViewId;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description Returns true if Container is enabled\r\n     * @returns {Boolean} \r\n     * @readonly \r\n     * @memberof Container\r\n     */\r\n    get enabled() {\r\n        return this.isEnabled;\r\n    }\r\n\r\n\r\n    set enabled(_isenabled = false){\r\n        this.isEnabled = _isenabled;\r\n    }\r\n\r\n    /**\r\n     * Boolean Property , returns True if Component is Visible\r\n     * @returns {Boolean} true if Container is visible\r\n     * @memberof Container\r\n     */\r\n    get visible(){\r\n        let tmpContainerEl = this.containerElement;\r\n        return ElementUtils.isVisible(tmpContainerEl);\r\n    }\r\n\r\n\r\n    set visible(_visible){\r\n        let tmpContainerEl = this.containerElement;\r\n        if(_visible)\r\n            ElementUtils.showElement(tmpContainerEl);\r\n        else \r\n            ElementUtils.hideElement(tmpContainerEl);\r\n\r\n    }\r\n\r\n     // \r\n\r\n     /**\r\n      * @description\r\n      * Container Lifecycle Method,\r\n      * Call by View or manually \r\n      * \r\n      * attachView Responsible to render view content, listners etc,\r\n      * \r\n      * Dispatch \"ATTACHED_EVENT\" when view got attached / rendered\r\n      * @memberof Container\r\n      */\r\n     attach() {\r\n        let parentEl = null;\r\n        \r\n        if (this.isAttached == false) {\r\n            this.isAttached = true;\r\n                parentEl = ElementUtils.view(this._parentViewId);\r\n               \r\n            if(this.createDOMElement == true){\r\n                parentEl.insertAdjacentHTML('beforeend', ElementUtils.constructContainerBaseElement(this.id));\r\n                let tmpEle = this.element;\r\n                \r\n                ElementUtils.hideElement(tmpEle);\r\n                \r\n                //Create  Contents and Internal Components\r\n                this.createDOMContent();\r\n            }\r\n            this.enabled = true;\r\n            this.visible = true;\r\n            this.dispatchEvent(EventUtils.ATTACHED_EVENT);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @description\r\n     * Container Lifecycle Method\r\n     * \r\n     * Call by View or Manually\r\n     * \r\n     * Container will be remove if View is attached \r\n     * @public\r\n     * @memberof Container  \r\n    */\r\n    detach() {\r\n        if (this.isAttached) {\r\n            let tmpContainerEl = this.componentElement;\r\n            tmpContainerEl.parentNode.removeChild(tmpContainerEl);\r\n            this.isAttached = false;\r\n            this.dispatchEvent(EventUtils.DETACHED_EVENT);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Call by View\r\n     * @override\r\n     * @memberof Container\r\n     */\r\n    refresh() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Call by View\r\n     * @override\r\n     * @memberof Container\r\n     */\r\n    destroy() {\r\n        //TODO\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Container;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport ElementUtils from \"../utils/ElementUtils\";\r\n\r\n\r\n/**\r\n * ViewStack maintains history of Views.\r\n * \r\n * ViewStack HTML DOM wrapper:\r\n        &lt; div class=\"vjs-viewstack ${viewstackId}\" &gt;\r\n *\r\n */\r\nclass ViewStack extends EventDispatcher {\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {string} _id - ViewStack ID\r\n     * @param {string} _route - Path Route Name\r\n     * @param {string} _parentId - ViewStack ParentID\r\n     * @memberof ViewStack\r\n     */\r\n    constructor(_id, _route, _parentId) {\r\n        super();\r\n        this.id = _id;\r\n        this.route = _route;\r\n        this.parentId = _parentId;\r\n        this.viewStack = [];\r\n        this.isRendered = false;\r\n        this.initViewStack();\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Initialize ViewStack , Implement by Subclass\r\n     * @override\r\n     * @memberof ViewStack\r\n     */\r\n    initViewStack() {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Push View in Viewstack\r\n     * @param {string} _viewId\r\n     * @param {array} _views\r\n     * @memberof ViewStack\r\n     */\r\n    pushViewElement(_viewId, _views) {\r\n\r\n        for (let viewObj in _views) {\r\n            let tmpview = _views[viewObj];\r\n            if (tmpview.isActive) {\r\n                tmpview.deActivateView();\r\n            }\r\n        }\r\n        this.viewStack.push(_viewId);\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * @description \r\n     * Navigator will call view destroy method which will remove \r\n     * View DOM Element, EventListners reference to DOM Element,\r\n     * Properties, Finally Object null to make garbage collected\r\n     * @memberof ViewStack\r\n     */\r\n    popViewElement() {\r\n        this.viewStack.pop();\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Returns Active View Id \r\n     * @returns {string} ViewID\r\n     * @memberof ViewStack\r\n     */\r\n    getActiveViewId() {\r\n        if (this.viewStack.length > 0)\r\n            return this.viewStack[this.viewStack.length - 1];\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Returns Viewstack DOMElement\r\n     * @public\r\n     * @returns {string} DOM ELement\r\n     * @memberof ViewStack\r\n     */\r\n    getViewStackElement() {\r\n        let el = null;\r\n        if (this.isRendered) {\r\n            el = this.getViewStackRootElement();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    \r\n    /**\r\n     *  \r\n     * @description Returns Viewstack Root DOMElement\r\n     * @override\r\n     * @private \r\n     * @returns {string} DOM Element\r\n     * @memberof ViewStack\r\n     */\r\n    getViewStackRootElement() {\r\n        return ElementUtils.viewStack(this.id);\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Render ViewStack DOMElement contents\r\n     * @public\r\n     * @memberof ViewStack\r\n     */\r\n    render() {\r\n        if (!this.isRendered) {\r\n            this.renderViewStack();\r\n            this.renderViewStackContent();\r\n            this.isRendered = true;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description Render ViewStack DOMElement \r\n     * Called by Render method\r\n     * @private\r\n     * @memberof ViewStack\r\n     */\r\n    renderViewStack() {\r\n        let tmpParentNavigatorEl = ElementUtils.viewNavigator(this.parentId);\r\n        let tmpViewStackEl = ElementUtils.constructViewStackBaseElement(this.id);\r\n        tmpParentNavigatorEl.insertAdjacentHTML('beforeend', tmpViewStackEl);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @override\r\n     * @memberof ViewStack\r\n     */\r\n    renderViewStackContent() {}\r\n\r\n    \r\n    /**\r\n     * \r\n     * @description \r\n     * Destroy Method used to cleanup viewstack resources\r\n     * Call by ViewNavigator to destroy view\r\n     * Remove Event Handlers, Make Properties null, \r\n     * Remove View Components and its reference.\r\n     * @override\r\n     * @public\r\n     * @memberof ViewStack\r\n     */\r\n    destroy() {\r\n        this.route = null;\r\n        this.viewStack = [];\r\n        this.isRendered = false;\r\n        let tmpParentNavigatorEl = ElementUtils.viewNavigator(this.parentId);\r\n        let tmpViewStackEl = ElementUtils.viewStack(this.id);\r\n        tmpParentNavigatorEl.removeChild(tmpViewStackEl);\r\n        this.parentId = null;\r\n        this.id = null;\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ViewStack;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport ElementUtils from '../utils/ElementUtils';\r\nimport ViewStack from './ViewStack';\r\nimport View from './View';\r\nimport EventRouter from './EventRouter';\r\n\r\n/**\r\n * \r\n * \r\n * UI navigation  manages by ViewNavigator. \r\n * \r\n * ViewNavigator is base class which have simple view navigation functionality.\r\n * \r\n * It manages set of view using stack-based history mechanism which also called as ViewStack.\r\n * \r\n * Each Viewstack represent its own view history stack.Having multiple Viewstacks ViewNavigator can manage multiple history stacks.\r\n * \r\n * ViewNavigator also Manages LifeCycle of View.\r\n * \r\n * ViewNavigator HTML DOM wrapper:\r\n       &lt; div class=\"vjs-viewnavigator ${navigatorId}\" &gt;\r\n *\r\n * ViewNavigator LifeCycle methods executes in given order :\r\n *\r\n *  1) Creation : constructor, initNavigator, render\r\n *\r\n *  2) Destruction : destroy\r\n *\r\n *  Following methods overrides and implement by ViewNavigator subclass executes in given order :\r\n * \r\n *  1) Creation : constructor, initNavigator, renderNavigatorContent, createView, createViewStack, initEventRoutes\r\n * \r\n *  2) Destruction : destroy\r\n * \r\n */\r\nclass ViewNavigator extends EventDispatcher {\r\n\r\n    /**\r\n     * @description\r\n     * UI navigation  manages by ViewNavigator. \r\n     * \r\n     * ViewNavigator\" is base class which have simple view navigation functionality.\r\n     * \r\n     * ViewNavigator manages set of view using stack-based history mechanism which also called as ViewStack.\r\n     * \r\n     * Each Viewstack represent its own view history stack. So vyanjs supports multiple history stack too.\r\n     * \r\n     * ViewNavigator also Manages LifeCycle of View.\r\n     *\r\n     * @param {String} _id - ViewNavigator ID\r\n     * @param {String} _parentId - Parent ID View or \"root\" DOM Element\r\n     * @param {String} _parentContainerId - Parent Container ID\r\n     * @memberof ViewNavigator\r\n     */\r\n    constructor(_id, _parentId = null,_parentContainerId = null) {\r\n        super();\r\n        this.id = _id;\r\n        // HTML ID attribute only \r\n        this.parentId = _parentId;\r\n        this.parentContId = _parentContainerId;\r\n        this.activeViewId = null;\r\n        this.activeViewStackId = null;\r\n        this.activeRoute = null;\r\n        this.views = {};\r\n        this.viewstacks = {};\r\n        this.eventRoute = new EventRouter();\r\n        this.isRendered = false;\r\n        this.navigationHistory = true;\r\n        this.initNavigator();\r\n    }\r\n\r\n    /**\r\n     * @description Implemented by Subclass \r\n     * Call by ViewNavigator Constructor\r\n     * @override\r\n     * @memberof ViewNavigator\r\n     */\r\n    initNavigator() {\r\n\r\n    }\r\n\r\n    /**\r\n     * Sets Navigation History \r\n     * Boolean Property , returns True if Component is Enabled\r\n     */\r\n    get history() {\r\n        return this.navigationHistory;\r\n    }\r\n\r\n    set history(_navigationHistory = true){\r\n        this.navigationHistory = _navigationHistory;\r\n    }\r\n\r\n    get parentContainer() {\r\n        return this.parentContId;\r\n    }\r\n\r\n    /**\r\n     * @description Set EventRouter for ViewNavigator, EventRouter is useful for EventBased Navigation and for navigation of single view or multiple views.\r\n     * @param {Object} _router - EventRouter\r\n     * @memberof ViewNavigator\r\n     */\r\n    set eventRouter(_router) {\r\n        if (!_router instanceof EventRouter) {\r\n            throw new Error(\"ViewNavigator : Wrong Type of Router\");\r\n        }\r\n        this.eventRoute = _router;\r\n    }\r\n\r\n    /**\r\n     * @description Returns EventRouter instance of ViewNavigator\r\n     * @returns {object} - EventRouter Instance\r\n     * @readonly\r\n     * @memberof ViewNavigator\r\n     */\r\n    get eventRouter() {\r\n        return this.eventRoute;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @description \r\n     * By Default View class will be created\r\n     * When Overrides by Subclass , custom Views will be created\r\n     * @override\r\n     * @param {String} _viewId - View ID\r\n     * @param {String} _route - Navigation Route / Path \r\n     * @param {String} _navparams - Navigation Parameters pass to View\r\n     * @param {String} _viewStackId - Parent Viewstack ID of View\r\n     * @returns {Object} - View Instance\r\n     * @memberof ViewNavigator\r\n     */\r\n    createView(_viewId, _route, _navparams, _viewStackId) {\r\n        return new View(_viewId, _route, _navparams, _viewStackId);\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * By Default ViewStack class will be created\r\n     * When Overrides by Subclass , custom Viewstack will be created \r\n     * @override\r\n     * @param {String} _viewStackId - ViewStack ID\r\n     * @param {String} _route - Navigation Route / Path \r\n     * @param {String} _parentId - Parent ViewNavigator ID\r\n     * @returns {Object} - ViewStack Instance\r\n     * @memberof ViewNavigator\r\n     */\r\n    createViewStack(_viewStackId, _route, _parentId) {\r\n        return new ViewStack(_viewStackId, _route, _parentId);\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * Call by ViewManager\r\n     * Navigation Route and Navigation EventRoute Combination must be unique\r\n     * @param {String} _route - Navigation Route\r\n     * @param {String} _navevent - Navigation Event Route \r\n     * @param {String} _navparams - Parameters pass to View\r\n     * @memberof ViewNavigator\r\n     */\r\n    navigate(_route, _navevent, _navparams) {\r\n        let tmpviewStackId = null;\r\n        if (this.navigationHistory == false) {\r\n            this.navigateBack(_route);\r\n        }\r\n\r\n        tmpviewStackId = this.eventRoute.findViewStackId(_navevent, _route);\r\n        let tmpViewStack = this.getViewStack(tmpviewStackId);\r\n        if (tmpViewStack == null)\r\n            tmpViewStack = this.createViewStack(tmpviewStackId, _route, this.id);\r\n\r\n        // Viewstack have _parentId\r\n\r\n        tmpViewStack.render(); // will construct Element and add it to DOM parent\r\n        this.activeViewStackId = tmpviewStackId;\r\n        this.viewstacks[tmpviewStackId] = tmpViewStack;\r\n\r\n        let tmpviewId = this.eventRoute.findViewId(_navevent, _route);\r\n        let tmpView = this.getView(tmpviewId);\r\n        if (tmpView == null)\r\n            tmpView = this.createView(tmpviewId, _route, _navevent, _navparams, tmpviewStackId);\r\n        this.removeActiveMenuElement();\r\n        let tmpViewStackEl = tmpViewStack.getViewStackElement();\r\n        this.activeViewId = tmpviewId;\r\n        this.views[tmpviewId] = tmpView;\r\n        this.activeRoute = _route;\r\n        tmpView.attachView(tmpViewStackEl); // will construct Element and add it to DOM parent\r\n        tmpViewStack.pushViewElement(tmpviewId, this.views);\r\n        tmpView.activateView();\r\n        this.setActiveMenuElement(_navevent);\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * Call by ViewManager or ViewNavigator internally\r\n     * Navigate back to previous View if history set to true\r\n     * @param {String} _route\r\n     * @memberof ViewNavigator \r\n     */\r\n    navigateBack(_route) {\r\n        if (_route == this.activeRoute) {\r\n            let tmpViewStack = this.getViewStack(this.activeViewStackId);\r\n            tmpViewStack.popViewElement();\r\n            let tmpView = this.views[this.activeViewId];\r\n            tmpView.deActivateView();\r\n            tmpView.detachView();\r\n            tmpView.destroy();\r\n            this.removeActiveMenuElement();\r\n            tmpView = null; // make garbage collected\r\n            this.views[this.activeViewId] = null;\r\n            delete this.views[this.activeViewId];\r\n            if (this.navigationHistory == true) {\r\n                this.activeViewId = tmpViewStack.getActiveViewId();\r\n                let tmpViewBack = this.views[this.activeViewId];\r\n                tmpViewBack.activateView();\r\n                let tmpNavEvent = this.views[this.activeViewId].navEvent;\r\n                this.setActiveMenuElement(tmpNavEvent);\r\n                this.activeRoute = this.views[this.activeViewId].route;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description Navigate Back to Specific View\r\n     * @param {String} _viewId - View ID\r\n     * @todo To be Implemented\r\n     * @memberof ViewNavigator\r\n     */\r\n    navigateBackToView(_viewId) {\r\n\r\n    }\r\n\r\n    /**\r\n     * @description Navigate to Specific View\r\n     * @param {String} _viewId - View ID\r\n     * @todo To be Implemented\r\n     * @memberof ViewNavigator\r\n     */\r\n    navigateToView(_viewId) {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @description This method will be implemented by Subclass\r\n     * @memberof ViewNavigator\r\n     */\r\n    removeActiveMenuElement(){\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description This method will be implemented by Subclass\r\n     * @param {string} _navEvent - Navigation Event Name\r\n     * @memberof ViewNavigator\r\n     */\r\n    setActiveMenuElement(_navEvent){\r\n\r\n    }\r\n\r\n    /**\r\n     * @description Get ViewStack Object by ViewStackId\r\n     * @param {String} _viewStackId - ViewStackID\r\n     * @returns {Object} - ViewStack Instance\r\n     * @memberof ViewNavigator\r\n     */\r\n    getViewStack(_viewStackId) {\r\n        let tmpVstack = null;\r\n        tmpVstack = this.viewstacks[_viewStackId];\r\n        return tmpVstack;\r\n    }\r\n\r\n    /**\r\n     * @description Get ViewObject by ViewId\r\n     * @param {string} _viewId - ViewID\r\n     * @returns {Object} - View Instance\r\n     * @memberof ViewNavigator\r\n     */\r\n    getView(_viewId) {\r\n        let tmpV = null;\r\n        tmpV = this.views[_viewId];\r\n        return tmpV;\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * ViewNavigator Lifecycle Method,\r\n     * Call by ViewManager,\r\n     * Render ViewNavigator DOM Content\r\n     * @public\r\n     * @memberof ViewNavigator\r\n     */\r\n    render() {\r\n        if (!this.isRendered) {\r\n            this.renderNavigator();\r\n            this.renderNavigatorContent();\r\n        }\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @description Renders, ViewNavigator DOM Element , it call by Render Method \r\n     * @private\r\n     * @memberof ViewNavigator\r\n     */\r\n    renderNavigator() {\r\n        let tmpParentId = this.parentId;\r\n        let tmpParentElement = null;\r\n        if (this.parentId != \"root\") {\r\n            tmpParentElement = ElementUtils.container(this.parentContainer,this.parentId);\r\n        } else {\r\n            tmpParentElement = document.getElementById(tmpParentId);\r\n        }\r\n        if (tmpParentElement != null) {\r\n            let tmpNavigatorEl = ElementUtils.constructNavigatorBaseElement(this.id);\r\n            tmpParentElement.insertAdjacentHTML('beforeend', tmpNavigatorEl);\r\n            this.isRendered = true;\r\n        } else {\r\n            throw new Error(\"ViewNavigator : No Parent Element found for Navigator\");\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    /**\r\n     * @description Render Navigator Subclass DOM Element content\r\n     * @private\r\n     * @override\r\n     * @memberof ViewNavigator\r\n     */\r\n    renderNavigatorContent() {}\r\n\r\n\r\n    /**\r\n     * \r\n     * @description \r\n     * ViewNavigator Lifecycle Method,\r\n     * \r\n     * Call by ViewManager to destroy ViewNavigator,\r\n     * \r\n     * Remove Event Handlers, Make Properties null, \r\n     * \r\n     * Remove Views and Viewstack objects.\r\n     * \r\n     * Remove ViewNavigator DOM Element and Its Contents\r\n     * \r\n     * Remove EventRoute Object\r\n     * \r\n     * @public\r\n     * @memberof ViewNavigator\r\n     */\r\n    destroy() {\r\n        for (let viewObj in this.views) {\r\n            let tmpview = this.views[viewObj];\r\n            tmpview.destroy();\r\n        }\r\n        for (let viewStkObj in this.viewstacks) {\r\n            let tmpviewstk = this.viewstacks[viewStkObj];\r\n            tmpviewstk.destroy();\r\n        }\r\n\r\n\r\n        let tmpNavigatorEl = ElementUtils.viewNavigator(this.id);\r\n        tmpNavigatorEl.parentNode.removeChild(tmpNavigatorEl);\r\n\r\n        this.views = null;\r\n        this.viewstacks = null;\r\n        this.parentId = null;\r\n        this.id = null;\r\n        this.parentId = null;\r\n        this.parentContId = null;\r\n        this.activeViewId = null;\r\n        this.activeViewStackId = null;\r\n        this.activeRoute = null;\r\n        this.eventRoute = null;\r\n        this.isRendered = false;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default ViewNavigator;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\nimport EventDispatcher from \"../../createjs/EventDispatcher\";\r\nimport Router from './Router';\r\nimport ViewNavigator from './ViewNavigator';\r\nimport EventBroadCaster from '../events/EventBroadcaster';\r\nimport EventUtils from '../utils/EventUtils';\r\n\r\n/**\r\n *\r\n * ViewManager manages ViewNavigator.\r\n * \r\n * It Subscribe to EventBroadcaster's Navigation channel to receive navigation change events.\r\n * \r\n * ViewManager find ViewNavigator based on Path Routes data and it match route info received in navigation change event.\r\n * \r\n * Following methods overrides and implement by ViewManager subclass executes in given order :\r\n * \r\n *  1) initialize\r\n * \r\n *  2) createNavigator\r\n * \r\n *  3) initRoutes\r\n * \r\n * \r\n */\r\nclass ViewManager extends EventDispatcher {\r\n\r\n\r\n    /**\r\n     * @description ViewManager manages ViewNavigator.It Subscribe to EventBroadcaster's Navigation channel to receive navigation change events.\r\n     * ViewManager find ViewNavigator based on Path Routes data and it match route info received in navigation change event.\r\n     * \r\n     * @memberof ViewManager\r\n     */\r\n    constructor() {\r\n        super();\r\n        this.preinitialize();\r\n        this.initialize();\r\n    }\r\n\r\n\r\n    /**\r\n     * @description preinitialize navigators,router etc.\r\n     * @private\r\n     * @memberof ViewManager\r\n     */\r\n    preinitialize() {\r\n        \r\n        this.router = new Router();\r\n        this.rootId = \"root\";\r\n\r\n        this.navigators = {};\r\n        this.currentRouteNavArray = [];\r\n        this.currentRoute = null;\r\n\r\n        EventBroadCaster.navEventChannel.addEventListener(EventUtils.NAV_CHANGE_EVENT, event => { this.handleNavChangeEvent(event); });\r\n    }\r\n\r\n    /**\r\n     * @description Implement by subclass to initialise \r\n     * @example initialize method is to be override in \"AppViewManager\" class (subclass of ViewManager) \r\n     \r\n       initialize() {\r\n        super.initialize();\r\n        this.initRoutes();\r\n        }\r\n     * \r\n     * @override\r\n     * @public\r\n     * @memberof ViewManager\r\n     */\r\n    initialize() {\r\n\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * Viewmanager find Viewnavigator based on Routes info set in Router Object\r\n     * \r\n     @example Sample Router Object is to be implement in \"AppViewManager\" class (subclass of ViewManager) \r\n     \r\n        initRoutes() {\r\n            let tmpRoutes = [\r\n                { path: \"/login\", navigatorId: \" LoginNavigator\",parentId: \"root\" },\r\n                { path: \"/file\", navigatorId: \" FileNavigator\",parentId: \"root\" },\r\n                { path: \"/logout\", navigatorId: \"ExitNavigator\",parentId: \"root\" },\r\n            ]\r\n            this.routes = new Router(tmpRoutes);\r\n        }\r\n\r\n      Here \"path\" is routeID, \"navigatorId\" is viewNavigatorId, \"parentId\" is DOM Element Id or ViewId or ContainerId.\r\n      By Default Main DOM Element have id=\"root\"\r\n\r\n     * \r\n     * @description Here path is routeID, navigatorID is viewNavigatorId, \r\n     * parentId is DOM Element Id or ViewId in case of Nested View Navigators\r\n     * By Default Main DOM Element have id=\"root\"\r\n     * \r\n     * @memberof ViewManager\r\n     */\r\n\r\n    set routes(_router) {\r\n        if (!_router instanceof Router) {\r\n            throw new Error(\"ViewManager: Wrong Type of Router\");\r\n        }\r\n        this.router = _router;\r\n    }\r\n\r\n\r\n    get routes() {\r\n        return this.router;\r\n    }\r\n\r\n    /**\r\n     * @description ViewManager calls createNavigator method when ViewNavigator is not created yet. \r\n     * \r\n     * @example createNavigator method is to be override in \"AppViewManager\" class (subclass of ViewManager) \r\n       \r\n       createNavigator(_navigatorId, _parentId,_parentContainerId) {\r\n        let tmpNavigator = null;\r\n        switch (_navigatorId) {\r\n            case \"simpleNavigator\":\r\n                tmpNavigator = new SimpleNavigator(_navigatorId, _parentId,_parentContainerId);\r\n            break;\r\n\r\n            default:\r\n                tmpNavigator = new ViewNavigator(_navigatorId, _parentId,_parentContainerId);\r\n\r\n        }\r\n        return tmpNavigator;\r\n    }\r\n     * \r\n     * @param {string} _navigatorId - ViewNavigatorId\r\n     * @param {string} _parentId - ParentId is DOM Element id or ViewID\r\n     * @param {string} _parentConId - ParentContainerID used in case of NestedNavigator\r\n     * @returns {Object} - New Instance of ViewNavigator\r\n     * @memberof ViewManager\r\n     */\r\n    createNavigator(_navigatorId, _parentId,_parentConId) {\r\n        return new ViewNavigator(_navigatorId, _parentId,_parentConId);\r\n    }\r\n\r\n    /**\r\n     * @description ViewManager maintains navigators object in Key, Value form.\r\n     * Where key is viewNavigatorID and value is ViewNavigator Object Instance\r\n     * @param {Object} _navigator - ViewNavigator\r\n     * @param {string} _navigatorId - ViewNavigatorID\r\n     * @memberof ViewManager\r\n     */\r\n    addNavigator(_navigator, _navigatorId) {\r\n        this.navigators[_navigatorId] = _navigator;\r\n        //this.currentNavigatorIds.push(_navigatorId);\r\n    }\r\n\r\n\r\n    addNavIdRoute(_route, _navigatorId) {\r\n        //let newNavRoute = {route:\"/path2\",navId:\"Navigator2\"};\r\n        let newNavRoute = {route:_route,navId:_navigatorId};\r\n        this.currentRouteNavArray.push(newNavRoute);\r\n    }\r\n\r\n    /**\r\n     * @returns {Object} - ViewNavigator Object Instance by ViewNavigatorId.\r\n     * @param {string} _navigatorId - ViewNavigatorID\r\n     * @memberof ViewManager\r\n     */\r\n    getNavigator(_navigatorId) {\r\n        let tmpnavNav = null;\r\n        if (this.navigators[_navigatorId] != null)\r\n            tmpnavNav = this.navigators[_navigatorId];\r\n        return tmpnavNav;\r\n    }\r\n\r\n    /**\r\n     * @returns {Array} - NavigatorID Array \r\n     * @param {string} _route - Path Route Name\r\n     * @memberof ViewManager \r\n     */\r\n    findRouteNavigator(_route) {\r\n        let tmpNavigatorIds = this.router.findNavigator(_route);\r\n        return tmpNavigatorIds;\r\n    }\r\n\r\n    /**\r\n     * @returns {string} - ParentID of ViewNavigator \r\n     * @param {string} _navigatorId - ViewNavigatorID\r\n     * @memberof ViewManager\r\n     */\r\n    getNavigatorParent(_navigatorId) {\r\n        let tmpNavParentId = this.router.findNavigatorParent(_navigatorId);\r\n        return tmpNavParentId;\r\n    }\r\n\r\n    /**\r\n     * @returns {string} - Parent Container ID of ViewNavigator \r\n     * @param {string} _route - Path Route Name\r\n     * @param {string} _navParentViewId - Parent ViewID\r\n     * @memberof ViewManager\r\n     */\r\n    getParentNavContainer(_route,_navParentViewId,_tmpNavId) {\r\n        // { path: \"/path9/path8\", navigatorId: \"Navigator4\",parentId: \"p9view1\" },\r\n        let tmpParentNavContrEl = this.rootId;\r\n        if(_navParentViewId != this.rootId){\r\n            let tmpNewRouteArray = _route.split(\"/\");\r\n            tmpNewRouteArray.shift();\r\n            tmpNewRouteArray.splice(tmpNewRouteArray.length-1, 1);\r\n\r\n            let tmpParentRouteId = \"\";\r\n            let tmpparentRouteArray = [];\r\n            for(let y=0;y < tmpNewRouteArray.length;y++){\r\n                tmpParentRouteId += \"/\"+tmpNewRouteArray[y];\r\n            }\r\n            //let tmpParentRouteId = tmpparentRouteArray.toString();\r\n            let tmpParentNavId = null;\r\n                    for(let z= 0; z < this.currentRouteNavArray.length;z++){\r\n                        let tmpRouteId = this.currentRouteNavArray[z].route;\r\n                        if(tmpRouteId == tmpParentRouteId){\r\n                            tmpParentNavId = this.currentRouteNavArray[z].navId;\r\n                        }\r\n                    }\r\n            let tmpParentNav = this.navigators[tmpParentNavId];\r\n            let tmpParentNavView = tmpParentNav.getView(_navParentViewId);\r\n            tmpParentNavContrEl = tmpParentNavView.getNavContainerId(_tmpNavId);\r\n        }\r\n        return tmpParentNavContrEl;\r\n    }\r\n\r\n    handleNavChangeEvent(e) {\r\n        let tmpRoute = e.route;\r\n        let tmpNavEvtName = e.eventName;\r\n        let tmpNavparams = e.params;\r\n        this.changeNavigation(tmpRoute,tmpNavEvtName,tmpNavparams);    \r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * changeNavigation method called when ViewManager Receive Forward Navigation Event\r\n     * @private\r\n     * @param {String} _route - Navigation Route / Path \r\n     * @param {Event} _naveventname - Navigation EventName\r\n     * @param {Object} _navparams - Navigation Parameters pass to ViewNavigator\r\n     * @memberof ViewManager\r\n     */\r\n    changeNavigation(_route, _naveventname, _navparams) {\r\n        let newRoute = _route;\r\n        let navigatorIds = this.findRouteNavigator(_route);\r\n        if (_naveventname == EventUtils.BACK_NAV_EVENT) {\r\n            // No Need to destroy / hide navigator assuming its same navigator\r\n            this.changeBackNavigation(navigatorIds, _route);\r\n        } else {\r\n\r\n            // 1) FirstTime load /path1\r\n            if((this.currentRoute == null)&&(this.currentRouteNavArray.length == 0)){\r\n                this.currentRoute = newRoute;\r\n                this.changeForwardNavigation(navigatorIds, newRoute, _naveventname, _navparams);\r\n            } else{\r\n                let tmpResultArray = this.chkNewRouteHaveCurrentRoute(newRoute);\r\n                if((this.currentRoute != newRoute)&& (tmpResultArray.length == 0)){\r\n                    let unusedNavIds = [];\r\n                    let tmpRouteAryLength = this.currentRouteNavArray.length -1;\r\n                    for(let i=tmpRouteAryLength; i >= 0 ;i--){\r\n                        unusedNavIds.push(this.currentRouteNavArray[i].navId);\r\n                    }\r\n                    this.destroyUnusedNavigators(unusedNavIds);\r\n                    this.currentRouteNavArray = [];\r\n                    this.currentRoute = newRoute;\r\n                    this.changeForwardNavigation(navigatorIds, newRoute, _naveventname, _navparams);\r\n                    \r\n                } else {\r\n                    //((this.currentRoute != newRoute)&& (tmpResultArray.length > 0))\r\n                    //((this.currentRoute == newRoute)&& (tmpResultArray.length > 0))\r\n                    //this.chkAndDestroyNestedNavs(this.currentRoute);\r\n                    this.chkAndDestroyNestedNavs(newRoute);\r\n                    this.currentRoute = newRoute;\r\n                        this.changeForwardNavigation(navigatorIds, newRoute, _naveventname, _navparams);\r\n                }\r\n            } \r\n        } \r\n    }\r\n\r\n    \r\n    chkNewRouteHaveCurrentRoute(_newRoute){\r\n        let tmpNewRouteArray = _newRoute.split(\"/\");\r\n        tmpNewRouteArray.shift();\r\n        let tmpCurrRouteArray = this.currentRoute.split(\"/\");\r\n        tmpCurrRouteArray.shift();\r\n        let tmpResultArray = tmpCurrRouteArray.filter(x => tmpNewRouteArray.includes(x));\r\n        return tmpResultArray;\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * changeBackNavigation change from current view to one previous view of viewstack by calling navigateBack method of multiple ViewNavigators associated same path route.\r\n     * @private\r\n     * @param {Array} _navigatorIds - Array of ViewNavigators.\r\n     * @param {String} _route - Path route\r\n     * @memberof ViewManager\r\n     */\r\n    changeBackNavigation(_navigatorIds, _route) {\r\n        if (_navigatorIds.length > 0) {\r\n            for (let j = 0; j < _navigatorIds.length; j++) {\r\n                let tmpNavId = _navigatorIds[j];\r\n                let tmpNavigator = this.getNavigator(tmpNavId);\r\n                if(tmpNavigator.history == true){\r\n                    tmpNavigator.navigateBack(_route);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @description \r\n     * changeForwardNavigation method called when ViewManager Receive Forward Navigation Event\r\n     * @private\r\n     * @param {Array} _navigatorIds - NavigatorId Array\r\n     * @param {String} _route - Navigation Route / Path \r\n     * @param {Event} _navevent - Navigation Event\r\n     * @param {Object} _navparams - Navigation Parameters pass to ViewNavigator\r\n     * @memberof ViewManager\r\n     */\r\n    changeForwardNavigation(_navigatorIds, _route, _navevent, _navparams) {\r\n        //this.checkAndDestroyNavigators(_navigatorIds, _route);\r\n        if (_navigatorIds.length > 0) {\r\n            for (let k = 0; k < _navigatorIds.length; k++) {\r\n                let tmpNavid = _navigatorIds[k];\r\n                let tmpNavigator = this.getNavigator(tmpNavid);\r\n                if (tmpNavigator == null) {\r\n                    // Add code here to find parent of Navigator.\r\n                    let tmpNavParentId = this.getNavigatorParent(tmpNavid);\r\n                    let tmpNavParentConId = this.getParentNavContainer(_route,tmpNavParentId,tmpNavid);\r\n                    tmpNavigator = this.createNavigator(tmpNavid, tmpNavParentId,tmpNavParentConId);\r\n                    this.addNavigator(tmpNavigator, tmpNavid);\r\n                    this.addNavIdRoute(_route,tmpNavid);\r\n                    tmpNavigator.render();\r\n                    /* createNavigator will call internally addNavigator to save created navigator */\r\n                    // tmpNavigator.addEventListner(\"changeNavEvent\",onNavChangeEvent); \r\n                }\r\n                tmpNavigator.navigate(_route, _navevent, _navparams);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    chkAndDestroyNestedNavs(_route) {\r\n        // Find Navigators Ids with current active route\r\n        let tmpCurrNavIds = this.findRouteNavigator(_route);\r\n        //let tmpNavIds = this.router.findRouteNavigators(_route);\r\n        //let tmpCurrentNavIds = this.router.findRouteNavigators(this.currentRoute);\r\n        let tmpCurrViewIds = [];\r\n        let tmpNestNavIds = [];\r\n\r\n        // Chk Active route Navigators have history false\r\n        // If History false then get its ViewId\r\n        if (tmpCurrNavIds.length > 0) {\r\n            for (let x = 0; x < tmpCurrNavIds.length; x++) {\r\n                let tmpCurrNavId = tmpCurrNavIds[x];\r\n                if(this.navigators[tmpCurrNavId] != null)  {\r\n                    let tmpViewId = this.navigators[tmpCurrNavId].activeViewId;\r\n                    if(this.navigators[tmpCurrNavId].history == false){\r\n                        tmpCurrViewIds.push(tmpViewId);\r\n                    }\r\n                } \r\n            }\r\n        }\r\n\r\n        // Find Navigators who have Active ViewId as Parent\r\n        if (tmpCurrViewIds.length > 0) {\r\n            for (let y = 0; y < tmpCurrViewIds.length; y++) {\r\n                let tmpViwId = tmpCurrViewIds[y];\r\n                let tmpNestNavId = this.chkViewAsNavigatorParent(tmpViwId);\r\n                if(tmpNestNavId != null){\r\n                    tmpNestNavIds.push(tmpNestNavId);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Destory Navigators who have Active ViewId as Parent\r\n        if(tmpNestNavIds.length > 0){\r\n            this.destroyUnusedNavigators(tmpNestNavIds);\r\n            this.delNavFromCurrRouteArr(tmpNestNavIds);\r\n        }\r\n\r\n    }\r\n\r\n    delNavFromCurrRouteArr(_tmpNavIds){\r\n        let p = _tmpNavIds.length;\r\n        while(p >= 0){\r\n            for(let n= 0; n < this.currentRouteNavArray.length;n++){\r\n                let tmpRouteNavId = this.currentRouteNavArray[n].navId;\r\n                if(tmpRouteNavId == _tmpNavIds[p]){\r\n                    this.currentRouteNavArray.splice(n, 1); \r\n                }\r\n            }\r\n            p--;\r\n        }\r\n\r\n    }\r\n    \r\n    chkViewAsNavigatorParent(_viewId) {\r\n        let tmpNavId = null;\r\n        for( let nav in this.navigators){\r\n            if(this.navigators[nav] != null){\r\n                let tmpParentId = this.navigators[nav].parentId;\r\n                if ((tmpParentId != null) && (tmpParentId == _viewId)){\r\n                    tmpNavId = this.navigators[nav].id;\r\n                } \r\n            } \r\n        }\r\n        return tmpNavId;\r\n    }\r\n\r\n    /**\r\n     * @description destroy unused Navigators\r\n     * @private\r\n     * @param {Array} _unusedNavigators \r\n     * @memberof ViewManager\r\n     */\r\n    destroyUnusedNavigators(_unusedNavigators) {\r\n        if (_unusedNavigators.length > 0) {\r\n            for (let p = 0; p < _unusedNavigators.length; p++) {\r\n                let tmpNavid = _unusedNavigators[p];\r\n                this.removeNavigator(tmpNavid);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description removes ViewNavigator object instance from navigators array.\r\n     * @param {String} _navigatorId - NavigatorId\r\n     * @memberof ViewManager\r\n     */\r\n    removeNavigator(_navigatorId) {\r\n        let tmpnav = this.navigators[_navigatorId];\r\n        tmpnav.destroy();\r\n        tmpnav = null;\r\n        this.navigators[_navigatorId] = null;\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @todo Implment destroy method\r\n     * @memberof ViewManager\r\n     */\r\n    destroyAll() {\r\n        //TODO\r\n    }\r\n}\r\n\r\nexport default ViewManager;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\nimport Event from \"../../createjs/Event\";\r\n\r\n/**\r\n * Generic Event is Useful to dispatch Custom Event with EventName, Params, Event Type\r\n * \r\n * It support loosely connected View - View, View - Component Communication with One to One , One to Many pattern\r\n */\r\nclass GenericEvent extends Event {\r\n\r\n    /**\r\n     * @example \r\n       //create Generic Event\r\n       let helloEvent = new GenericEvent(EventUtils.CHANGE, \"HelloChangeEvent\", \"myParams\");\r\n\r\n       // Dispatch  Event on Application Event Channel\r\n       EventBroadCaster.appEventChannel.dispatchEvent(helloEvent);\r\n     * \r\n     * @param {string} _type\r\n     * @param {string} _eventName\r\n     * @param {Object} _params\r\n     * @param {*} _bubbles\r\n     * @param {Boolean} _cancelable\r\n     * @memberof GenericEvent\r\n     */\r\n    constructor(_type, _eventName, _params, _bubbles, _cancelable ) {\r\n        super(_type, _bubbles, _cancelable);\r\n        this.type = _type;\r\n        this.eventName = _eventName;\r\n        this.params = _params;\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     *\r\n     * @returns {Object) - creates and return GenericEvent Instance\r\n     * @memberof GenericEvent\r\n     */\r\n    clone() {\r\n        return new GenericEvent(this.type, this.eventName, this.params, this.bubbles, this.cancelable);\r\n    }\r\n}\r\n\r\nexport default GenericEvent;","/** \r\n * @license\r\n * Copyright (c) 2023 Gaurang Lade\r\n * \r\n * MIT License\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n */\r\n\r\n\r\n/**\r\n * BindingUtils provides One-way and Two-way binding with Just single statement.\r\n * Features:\r\n * 1. HTML Element to Html Element\r\n * 2. HTML Element to JavaScript Object\r\n * 3. JavaScript Object to JavaScript Object\r\n * 4. Support chain binding.\r\n *     Example: Input Element (binds to) -> Model Object (binds to) -> Label Element\r\n * 5. Custom property binding and event to trigger binding event.\r\n * 6. Model to View binding\r\n * 7. Built-in mechanism to prevent Memory Leak\r\n * \r\n * BindingUtils is Singleton class. \r\n * \r\n */\r\nclass BindingUtil {\r\n\r\n    /**\r\n     * \r\n     * @example Add Binding:\r\n     * \r\n    BindingUtils.addBinding(srcele, \"value\", \"change\", destele, \"value\", false);\r\n\r\n \r\n        @example Remove Binding :\r\n\r\n        BindingUtils.removeBinding(srcele, \"value\");\r\n        \r\n        @example Chain Binding : \r\n        DOM Element -> JavaScript Object (or DOM) ->  DOM Element (or Javascripg Object)\r\n\r\n        1) DOM Element -> JavaScript Object :\r\n\r\n        BindingUtils.addBinding(srcele, \"value\", \"change\", this.myCustomModel, \"setValue\", false);\r\n\r\n        2) JavaScript Object ->  DOM Element :\r\n\r\n        BindingUtils.addBinding(this.myCustomModel, \"getValue\", \"change\", destele, \"value\", false);\r\n        \r\n        @example Two-way Binding :\r\n\r\n        BindingUtils.addBinding(srcele, \"value\", \"change\", destele, \"value\", true);\r\n \r\n     * @memberof BindingUtil\r\n     */\r\n    constructor() {\r\n        if (!BindingUtil.instance) {\r\n            BindingUtil.instance = this;\r\n            this.BindObjDictionary = {};\r\n            this.objCounter = 0;\r\n            this.bindObjIdPrefix = \"bindobj\";\r\n        }\r\n        return BindingUtil.instance;\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @private\r\n     * @param {object} _srcObj - Source DOM Element or Object\r\n     * @param {string} _srcProp - Source Property\r\n     * @param {string} _evtname - Source Object EventName on which Binding Trigger \r\n     * @param {object} _targObj - Target DOM Element or Object\r\n     * @param {string} _targProp - Target Property\r\n     * @memberof BindingUtil\r\n     */\r\n    Binds(_srcObj, _srcProp, _evtname, _targObj, _targProp) {\r\n        let srcObject = new Object();\r\n        let srcPropStr = _srcProp + \"prop\";\r\n        let srcObjKey = null;\r\n        this.objCounter++;\r\n        let tmpId = this.bindObjIdPrefix+this.objCounter;\r\n        if (_srcObj.nodeName) {\r\n            \r\n            srcObjKey = tmpId;//_srcObj.id;\r\n            _srcObj.dataset.bindid = srcObjKey;\r\n            this.addToBindDictionary(srcObjKey, _srcObj, _evtname);\r\n            srcObject = this.BindObjDictionary[srcObjKey];\r\n        } else {\r\n            srcObjKey = tmpId;\r\n            _srcObj.bindid = srcObjKey;\r\n            this.addToBindDictionary(srcObjKey, _srcObj, _evtname);\r\n            srcObject = this.BindObjDictionary[srcObjKey];\r\n        }\r\n\r\n        if (srcObject.srcPropArray == null) {\r\n            srcObject.srcPropArray = [];\r\n        }\r\n        if (srcObject[srcPropStr] == null) {\r\n            srcObject.srcPropArray.push(_srcProp);\r\n            srcObject[srcPropStr] = new Object();\r\n            if (typeof(_srcObj[_srcProp]) === 'function') {\r\n                srcObject[srcPropStr].value = _srcObj[_srcProp]();\r\n            } else {\r\n                srcObject[srcPropStr].value = _srcObj[_srcProp];\r\n            }\r\n\r\n        }\r\n        if (srcObject[srcPropStr].bindObjArray == null) {\r\n            srcObject[srcPropStr].bindObjArray = [];\r\n        }\r\n        let targetObject = this.getTargetObject(_targObj, _targProp);\r\n        srcObject[srcPropStr].bindObjArray.push(targetObject);\r\n        this.BindObjDictionary[srcObjKey] = srcObject;\r\n    }\r\n\r\n    addToBindDictionary(key, Obj, _evtname) {\r\n        if (this.BindObjDictionary[key] == null) {\r\n            this.BindObjDictionary[key] = Obj;\r\n        }\r\n        Obj.addEventListener(_evtname, (e) => { this.synchronise(e); });\r\n    }\r\n\r\n    \r\n    synchronise(event) {\r\n        event.preventDefault();\r\n        let srcObjfrmEvt = event.target;\r\n        let eleid;\r\n        //console.info(typeof srcObjfrmEvt);\r\n        if (srcObjfrmEvt.bindid) {\r\n            eleid = srcObjfrmEvt.bindid;\r\n        } else {\r\n            eleid = srcObjfrmEvt.dataset.bindid;\r\n        }\r\n        let srcObject = this.BindObjDictionary[eleid];\r\n        let srcPropArrayLen = srcObject.srcPropArray.length;\r\n        for (let i = 0; i < srcPropArrayLen; i++) {\r\n            let tmpProp = srcObject.srcPropArray[i];\r\n            let tmpPropStr = tmpProp + \"prop\";\r\n            // compare\r\n            let tmpval;\r\n            if (typeof(srcObject[tmpProp]) === 'function') {\r\n                tmpval = srcObject[tmpProp]();\r\n            } else {\r\n                tmpval = srcObject[tmpProp];\r\n            }\r\n                this.synchroniseTargetObj(srcObject, tmpPropStr, tmpProp);\r\n                srcObject[tmpPropStr].value = srcObject[tmpProp];\r\n        }\r\n    }\r\n\r\n    synchroniseTargetObj(srcObject, srcPropStr, srcProp) {\r\n        let tarObjArray = srcObject[srcPropStr].bindObjArray;\r\n        let tarObjArrayLen = tarObjArray.length;\r\n        for (let j = 0; j < tarObjArrayLen; j++) {\r\n            let tarObj = tarObjArray[j];\r\n            let tmpval;\r\n            if (typeof(srcObject[srcProp]) === 'function') {\r\n                tmpval = srcObject[srcProp]();\r\n            } else {\r\n                tmpval = srcObject[srcProp];\r\n            }\r\n            let tartmpval;\r\n            if (tarObj.obj != null) {\r\n                if (typeof(tarObj.obj[tarObj.prop]) === 'function') {\r\n                    tarObj.obj[tarObj.prop](tmpval);\r\n                } else {\r\n                    tarObj.obj[tarObj.prop] = tmpval;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    getTargetObject(targObj, targProp) {\r\n        let tarObject = new Object();\r\n        tarObject.obj = targObj;\r\n        tarObject.prop = targProp;\r\n        return tarObject;\r\n    }\r\n\r\n\r\n    /**\r\n     * @description - Add Binding method binds Source Object property with Target Object Property with Synchronize on SourceObject Event\r\n     * @public\r\n     * @param {object} srcObj - Source DOM Element or Object\r\n     * @param {string} srcProp - Source Property\r\n     * @param {string} evtname - Source Object EventName on which Binding Trigger \r\n     * @param {object} targObj - Target DOM Element or Object\r\n     * @param {string} targProp - Target Property\r\n     * @param {Boolean} twoway - True when Binding is Two-way\r\n     * @example Add Binding :\r\n BindingUtils.addBinding(srcele, \"value\", \"change\", destele, \"value\", false);\r\n     * @memberof BindingUtil\r\n     */\r\n    addBinding(srcObj, srcProp, evtname, targObj, targProp, twoway) {\r\n        this.Binds(srcObj, srcProp, evtname, targObj, targProp);\r\n        if (twoway) {\r\n            this.Binds(targObj, targProp, evtname, srcObj, srcProp);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @description - Add Binding method binds Source Object property with Target Object Property with Synchronize on SourceObject Event\r\n     * @public\r\n     * @param {object} _srcObj - Source DOM Element or Object\r\n     * @param {string} _evtname - Source Object EventName on which Binding Trigger \r\n     * @example Remove Binding :\r\n BindingUtils.removeBinding(srcele, \"value\");\r\n     * @memberof BindingUtil\r\n     */\r\n    removeBinding(_srcObj, _evtname) {\r\n        // determine is it dom element or plain object\r\n        let srcObject;\r\n        if (_srcObj == null)\r\n            return;\r\n        if (_srcObj.nodeName) {\r\n            let eleid = _srcObj.dataset.bindid;\r\n            if (this.BindObjDictionary[eleid] != null) {\r\n                srcObject = this.BindObjDictionary[eleid];\r\n                this.removeListeners(srcObject);\r\n            } else {\r\n                srcObject = this.BindObjDictionary[_srcObj.bindid];\r\n                this.removeListeners(srcObject);\r\n            }\r\n\r\n        } else {\r\n            if (this.BindObjDictionary[_srcObj.bindid] != null) {\r\n                srcObject = this.BindObjDictionary[_srcObj.bindid];\r\n                this.removeListeners(srcObject);\r\n            }\r\n        }\r\n\r\n        if (srcObject.srcPropArray.length > 0) {\r\n\r\n            let srcPropArrayLen = srcObject.srcPropArray.length;\r\n            for (let j = 0; j < srcPropArrayLen; j++) {\r\n                let srcProp = srcObject.srcPropArray[j];\r\n                let srcPropStr = srcProp + \"prop\";\r\n                srcObject[srcPropStr].bindObjArray = [];\r\n            }\r\n        }\r\n    }\r\n\r\n    removeListeners(sourceObj, evtname) {\r\n        sourceObj.removeEventListener(evtname, (e) => { this.synchronise(e); });\r\n    }\r\n\r\n}\r\n\r\nconst BindingUtils = new BindingUtil();\r\n\r\nexport default BindingUtils;"],"names":[],"mappings":"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"}